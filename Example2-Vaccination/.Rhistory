sr=rnorm(4*prov,0,2),     #sia count:province interaction
st=rnorm(4*year,0,2),      #sia count:year interaction
# DHS style data
A=dim(tmp2)[1],
ra=tmp2$prov,
ta=tmp2$year,
ypa=tmp2$ypa,
sia.a=tmp2$sia.a,
sr.a=tmp2$sr.a,
st.a=tmp2$st.a,
aa=tmp2$ad,
sigma_r=1,sigma_d=1,sigma_t=1,sigma_yp=1,sigma_s=1,sigma_sr=1,sigma_st=1)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xd"),
sample=1,
n.chains=1, summarise=FALSE)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xd","xa"),
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out)
#Simulated
dim(Simulated)
#Simulated
dim(Simulated)
#Simulated
dim(Simulated)
S2 <- as.mcmc(out$model)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xd","xa"),
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
S2 <- as.mcmc(out$mcmc)
S2
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xa"),  # "xd"
sample=1,
n.chains=1, summarise=FALSE)
tmp2$xa.sim = as.vector(Simulated)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xa"),  # "xd"
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
dim(tmp2)[1]
# spatial data only
N2 <- 50
year2 <- 2
tmp2 <- data.frame(expand.grid(prov=c(1:prov),year=c(1:year),id=1:N2))
tmp2$ypa <- ((tmp2$year-1)*11)+tmp2$prov
tmp2$sia.a <- rbinom(n=dim(tmp2)[1],size=3,p=0.5)+1  # max 4
tmp2$sr.a <- ((tmp2$prov-1)*4)+tmp2$sia.a
tmp2$st.a <- ((tmp2$year-1)*4)+tmp2$sia.a
tmp2$ad <- round(rlnorm(dim(tmp2)[1],log(12),0.5)) # age
tmp2$pa <- 1
head(tmp2)
# parameters are treated as data for the simulation step
#data<-list(N=N,x=x,alpha=alpha,beta=beta,tau=tau)
data <- list(D=dim(tmp)[1],
R=prov,Y=year,YP=prov*year,S=4,SR=prov*4,ST=year*4,
ad=tmp$ad,
rd=tmp$prov,
dd=tmp$dd,
td=tmp$year,
ypd=tmp$ypd,
sia.d=tmp$sia.d,
sr.d=tmp$sr.d,
st.d=tmp$st.d,
r=seq(-2,2,length.out = prov),   #province
t=rnorm(year,0,2),   # year of vaccination
yp=rnorm(prov*year,0,2),   #year:province interaction
s=rnorm(4,0,2),     #sia count (assume just 4(5 inc baseline) categories)
sr=rnorm(4*prov,0,2),     #sia count:province interaction
st=rnorm(4*year,0,2),      #sia count:year interaction
# DHS style data
A=dim(tmp2)[1],
ra=tmp2$prov,
ta=tmp2$year,
ypa=tmp2$ypa,
sia.a=tmp2$sia.a,
sr.a=tmp2$sr.a,
st.a=tmp2$st.a,
aa=tmp2$ad,
sigma_r=1,sigma_d=1,sigma_t=1,sigma_yp=1,sigma_s=1,sigma_sr=1,sigma_st=1)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xa"),  # "xd"
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
tmp2$xa.sim = as.vector(Simulated)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xd"),  # "xd"  .... "xa"
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
tmp$xd.sim = as.vector(Simulated)
write.csv(tmp,"covAFP_sim_data_9March19.csv",row.names = F)
write.csv(tmp2,"covDHS_sim_data_9March19.csv",row.names = F)
# Estimate parameters from the AFP and DHA data
rm(list = ls())
# load in data
dd <- read.csv("covDHS_sim_data_9March19.csv")
da <- read.csv("covAFP_sim_data_9March19.csv")
parameters <- c("province", "year", "yp","d1.OR", "d.avg.OR", "sia", "sr", "st",
"sigma_r", "sigma_d", "sigma_t", "sigma_yp", "sigma_s", "sigma_sr", "sigma_st")
# MCMC settings
ni <- 10000
nt <- 6
nb <- 5000
nc <- 3
dim(da)[1]
out <- jags(jags.data, inits, parameters, model.file="vacc_est.bug",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
xd = dd$xd.sim,
ad = rep(1,dim(dd)[1]),
dd = dd$dd,
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
year <- 5
prov <- 11
year <- 5
parameters <- c("province", "year", "yp","d1.OR", "d.avg.OR", "sia", "sr", "st",
"sigma_r", "sigma_d", "sigma_t", "sigma_yp", "sigma_s", "sigma_sr", "sigma_st")
inits <- function(){list(r = rnorm(1, 0, 0.1), #province
t = rnorm(1, 0, 0.1), #year of vacc
yp = rnorm(407, 0, 0.1), #year:province interaction
s = rnorm(4, 0, 0.1), #sia count
sr = rnorm(136, 0, 0.1), #sia count:province interaction
st = rnorm(48, 0, 0.1))} #sia count:year interaction
# MCMC settings
ni <- 10000
nt <- 6
nb <- 5000
nc <- 3
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
xd = dd$xd.sim,
ad = rep(1,dim(dd)[1]),
dd = dd$dd,
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
out <- jags(jags.data, inits, parameters, model.file="vacc_est.bug",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
setwd("~/Documents/GitHub/Command-BUGS/Example2-Vaccination")
out <- jags(jags.data, inits, parameters, model.file="vacc_est.bug",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
out <- jags(jags.data, inits, parameters, model.file="vacc_est.bug",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
out <- jags(jags.data, inits, parameters, model.file="vacc_est.bug",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
xd = dd$xd.sim,
ad = rep(1,dim(dd)[1]),
dd = dd$dd,
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
jags.data$dd
head(dd)
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
xd = dd$xd.sim,
dd = rep(1,dim(dd)[1]),
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
head(dd)
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
ad = dd$ad,
xd = dd$xd.sim,
dd = rep(1,dim(dd)[1]),
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
inits <- function(){list(r = rnorm(prov, 0, 0.1), #province
t = rnorm(year, 0, 0.1), #year of vacc
yp = rnorm(prov*year, 0, 0.1), #year:province interaction
s = rnorm(4, 0, 0.1), #sia count
sr = rnorm(4*prov, 0, 0.1), #sia count:province interaction
st = rnorm(4*year, 0, 0.1))} #sia count:year interaction
# MCMC settings
ni <- 10000
nt <- 6
nb <- 5000
nc <- 3
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
ad = dd$ad,
xd = dd$xd.sim,
dd = rep(1,dim(dd)[1]),
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
parameters <- c("province", "year")
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
print(out, digits = 3)
rm(list = ls())
# step 1: generate sample data
prov <- 11  # DRC has 11 provinces
year<- 5    # 5 years of data
N <- 100    # assume 100 samples within each province
# spatial temporal data
tmp <- data.frame(expand.grid(prov=c(1:prov),year=c(1:5)))
tmp$dd <- 1
tmp$ypd <- ((tmp$year-1)*11)+tmp$prov
tmp$sia.d <- rbinom(n=dim(tmp)[1],size=3,p=0.5)+1  # max 4
tmp$sr.d <- ((tmp$prov-1)*4)+tmp$sia.d
tmp$st.d <- ((tmp$year-1)*4)+tmp$sia.d
tmp$ad <- round(rlnorm(dim(tmp)[1],log(12),0.5)) # age
head(tmp)
# spatial temporal data
tmp <- data.frame(expand.grid(prov=c(1:prov),year=c(1:5),id=1:N))
N <- 50    # assume 100 samples within each province
# spatial temporal data
tmp <- data.frame(expand.grid(prov=c(1:prov),year=c(1:5),id=1:N))
tmp$dd <- 1
tmp$ypd <- ((tmp$year-1)*11)+tmp$prov
tmp$sia.d <- rbinom(n=dim(tmp)[1],size=3,p=0.5)+1  # max 4
tmp$sr.d <- ((tmp$prov-1)*4)+tmp$sia.d
tmp$st.d <- ((tmp$year-1)*4)+tmp$sia.d
tmp$ad <- round(rlnorm(dim(tmp)[1],log(12),0.5)) # age
head(tmp)
# spatial data only
N2 <- 50
year2 <- 2
tmp2 <- data.frame(expand.grid(prov=c(1:prov),year=c(1:year),id=1:N2))
tmp2$ypa <- ((tmp2$year-1)*11)+tmp2$prov
tmp2$sia.a <- rbinom(n=dim(tmp2)[1],size=3,p=0.5)+1  # max 4
tmp2$sr.a <- ((tmp2$prov-1)*4)+tmp2$sia.a
tmp2$st.a <- ((tmp2$year-1)*4)+tmp2$sia.a
tmp2$ad <- round(rlnorm(dim(tmp2)[1],log(12),0.5)) # age
tmp2$pa <- 1
head(tmp2)
rnorm(4,0,2)
# parameters are treated as data for the simulation step
#data<-list(N=N,x=x,alpha=alpha,beta=beta,tau=tau)
data <- list(D=dim(tmp)[1],
R=prov,Y=year,YP=prov*year,S=4,SR=prov*4,ST=year*4,
ad=tmp$ad,
rd=tmp$prov,
dd=tmp$dd,
td=tmp$year,
ypd=tmp$ypd,
sia.d=tmp$sia.d,
sr.d=tmp$sr.d,
st.d=tmp$st.d,
r=seq(-2,2,length.out = prov),   #province - main thing of interest
t=rnorm(year,0,0.02),   # year of vaccination
yp=rnorm(prov*year,0,0.02),   #year:province interaction
s=rnorm(4,0,2),     #sia count (assume just 4(5 inc baseline) categories)
sr=rnorm(4*prov,0,0.02),     #sia count:province interaction
st=rnorm(4*year,0,0.02),      #sia count:year interaction
# DHS style data
A=dim(tmp2)[1],
ra=tmp2$prov,
ta=tmp2$year,
ypa=tmp2$ypa,
sia.a=tmp2$sia.a,
sr.a=tmp2$sr.a,
st.a=tmp2$st.a,
aa=tmp2$ad,
sigma_r=1,sigma_d=1,sigma_t=1,sigma_yp=1,sigma_s=1,sigma_sr=1,sigma_st=1)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xd"),  # "xd"  .... "xa"
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
#Simulated
dim(Simulated)
tmp$xd.sim = as.vector(Simulated)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xa"),  # "xd"  .... "xa"
sample=1,
n.chains=1, summarise=FALSE)
# parameters are treated as data for the simulation step
#data<-list(N=N,x=x,alpha=alpha,beta=beta,tau=tau)
data <- list(D=dim(tmp)[1],
R=prov,Y=year,YP=prov*year,S=4,SR=prov*4,ST=year*4,
ad=tmp$ad,
rd=tmp$prov,
dd=tmp$dd,
td=tmp$year,
ypd=tmp$ypd,
sia.d=tmp$sia.d,
sr.d=tmp$sr.d,
st.d=tmp$st.d,
r=seq(-2,2,length.out = prov),   #province - main thing of interest
t=rnorm(year,0,0.02),   # year of vaccination
yp=rnorm(prov*year,0,0.02),   #year:province interaction
s=rnorm(4,0,2),     #sia count (assume just 4(5 inc baseline) categories)
sr=rnorm(4*prov,0,0.02),     #sia count:province interaction
st=rnorm(4*year,0,0.02),      #sia count:year interaction
# DHS style data
A=dim(tmp2)[1],
ra=tmp2$prov,
ta=tmp2$year,
ypa=tmp2$ypa,
sia.a=tmp2$sia.a,
sr.a=tmp2$sr.a,
st.a=tmp2$st.a,
aa=tmp2$ad,
sigma_r=1,sigma_d=1,sigma_t=1,sigma_yp=1,sigma_s=1,sigma_sr=1,sigma_st=1)
# run jags
out <- run.jags(model="vacc.jag", data = data,
monitor=c("xa"),  # "xd"  .... "xa"
sample=1,
n.chains=1, summarise=FALSE)
# reformat the outputs
Simulated <- coda::as.mcmc(out$mcmc)
tmp2$xa.sim = as.vector(Simulated)
write.csv(tmp,"covAFP_sim_data_9March19.csv",row.names = F)
write.csv(tmp2,"covDHS_sim_data_9March19.csv",row.names = F)
# Estimate parameters from the AFP and DHA data
rm(list = ls())
# load in data
dd <- read.csv("covDHS_sim_data_9March19.csv")
da <- read.csv("covAFP_sim_data_9March19.csv")
prov <- 11
year <- 5
parameters <- c("province", "year", "yp","d1.OR", "d.avg.OR", "sia", "sr", "st",
"sigma_r", "sigma_d", "sigma_t", "sigma_yp", "sigma_s", "sigma_sr", "sigma_st")
inits <- function(){list(r = rnorm(prov, 0, 0.1), #province
t = rnorm(year, 0, 0.1), #year of vacc
yp = rnorm(prov*year, 0, 0.1), #year:province interaction
s = rnorm(4, 0, 0.1), #sia count
sr = rnorm(4*prov, 0, 0.1), #sia count:province interaction
st = rnorm(4*year, 0, 0.1))} #sia count:year interaction
# MCMC settings
ni <- 10000
nt <- 6
nb <- 5000
nc <- 3
#MODEL DATA
jags.data <- list(D = dim(dd)[1],
ad = dd$ad,
xd = dd$xd.sim,
dd = rep(1,dim(dd)[1]),
rd = dd$prov,
td = dd$year,
ypd = dd$ypa,
sia.d = dd$sia.a, #need to shift SIA terms so there is no zero node (sia=0 --> s[1])
sr.d = dd$sr.a,
st.d = dd$st.a,
A = dim(da)[1],
xa = da$xd.sim,
aa = da$ad,
ra = da$prov,
ta = da$year,
ypa = da$ypd,
sia.a = da$sia.d,
sr.a = da$sr.d,
st.a = da$st.d,
R = prov,
Y = year,
YP = prov*year,
S = 4,
SR = 4*prov,
ST = 4*year)
parameters <- c("province", "year")
out <- jags(jags.data, inits, parameters, model.file="vacc_est.jag",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb,
working.directory = getwd())
print(out, digits = 3)
